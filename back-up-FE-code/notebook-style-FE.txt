import { useEffect, useState } from 'react';
import axios from 'axios';
import './App.css';

function App() {
  const [text, setText] = useState("");
  const [todos, setTodos] = useState([]);
  const [isError, setIsError] = useState(false);

  useEffect(() => {
    axios.get("http://localhost:3000/")
      .then(res => setTodos(res.data));
  }, []);

  const addTodo = () => {
    if (!text.trim()) {
      setIsError(true);
      setTimeout(() => setIsError(false), 1000);
      return;
    }

    axios.post("http://localhost:3000/", { text }, { headers: { "Content-Type": "application/json" } })
      .then(res => {
        setTodos([...todos, res.data]);
        setText('');
      })
      .catch(error => console.error("Error:", error));
  };

  const toggleComplete = (id) => {
    axios.patch(`http://localhost:3000/${id}`)
      .then(res => setTodos(res.data));
  };

  const deleteFunc = (id) => {
    axios.delete(`http://localhost:3000/${id}`)
      .then(res => setTodos(res.data));
  };

  return (
    <div className="w-screen h-screen flex justify-center items-center bg-[#f7ede2]">
      {/* Notebook Paper */}
      <div className="relative w-[60vw] h-[85vh] bg-[#fdf6e4] border border-[#e6d5b8] shadow-xl rounded-[40px] p-8 flex flex-col items-center">
        
        {/* Notebook Spiral - Dotted Border */}
        <div className="absolute left-8 top-4 h-[95%] border-l-4 border-dashed border-gray-500"></div>

        {/* Title */}
        <h1 className="text-6xl font-[Caveat] text-gray-700 text-center mb-8">To-Do List</h1>

        {/* Input Section */}
        <div className="flex w-[90%] bg-[#fffadd] border border-[#e6d5b8] rounded-xl p-4 shadow-md">
          <input 
            className={`w-full px-4 py-3 bg-transparent font-[Patrick Hand] text-gray-700 text-xl placeholder-gray-500 focus:outline-none ${isError ? "border-red-500" : ""}`} 
            value={text} 
            placeholder="Write your task here..." 
            onChange={(e) => setText(e.target.value)}
          />
          <button 
            onClick={addTodo} 
            className="px-6 py-3 bg-[#f2c94c] hover:bg-[#f1b72e] rounded-lg font-[Patrick Hand] text-2xl shadow-md">
            Add
          </button>
        </div>

        {/* To-Do List */}
        {todos.length > 0 && (
          <ul className="mt-8 space-y-6 w-[90%] max-h-[60vh] overflow-y-auto">
            {todos.map(todo => (
              <li 
                key={todo.id} 
                className="flex justify-between items-center bg-[#fffadd] border border-[#e6d5b8] rounded-xl p-4 shadow-md font-[Patrick Hand] text-2xl relative"
              >
                {/* Dotted Notebook Bullet */}
                <div className="absolute top-1/2 left-3 w-3 h-3 bg-gray-500 rounded-full -translate-y-1/2"></div>

                {/* Task Text */}
                <span 
                  onClick={() => toggleComplete(todo.id)} 
                  className={`cursor-pointer w-full ml-6 ${todo.completed ? "line-through text-gray-400" : "text-gray-800"}`}
                >
                  {todo.text}
                </span>

                {/* Delete Button */}
                <button onClick={() => deleteFunc(todo.id)} className="p-3 rounded-full hover:bg-[#f2c94c]">
                  ‚ùå
                </button>
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>
  );
}

export default App;
